<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kivi.dashboard.sys.mapper.SysUserExMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.kivi.dashboard.sys.entity.SysUser">
        <id column="id" property="id" />
        <result column="cif_id" property="cifId" />
        <result column="login_mode" property="loginMode" />
        <result column="login_name" property="loginName" />
        <result column="user_type" property="userType" />
        <result column="application_id" property="applicationId" />
        <result column="status" property="status" />
        <result column="expired" property="expired" />
        <result column="enterprise_id" property="enterpriseId" />
        <result column="department_id" property="departmentId" />
        <result column="job_id" property="jobId" />
        <result column="is_leader" property="isLeader" />
        <result column="gmt_create" property="gmtCreate" />
        <result column="gmt_update" property="gmtUpdate" />
        <result column="create_user_id" property="createUserId" />
    </resultMap>
    
    <resultMap id="UserVoResultMap" type="com.kivi.framework.vo.UserVo">
        <result column="id" property="id"/>
        <result column="cif_id" property="cifId" />
        <result column="login_mode" property="loginMode" />
        <result column="login_name" property="loginName" />
        <result column="user_type" property="userType" />
        <result column="application_id" property="applicationId" />
        <result column="status" property="status" />
        <result column="expired" property="expired" />
        <result column="enterprise_id" property="enterpriseId" />
        <result column="department_id" property="departmentId" />
        <result column="job_id" property="jobId" />
        <result column="is_leader" property="isLeader" />
        <result column="gmt_create" property="gmtCreate" />
        <!-- <result column="gmt_update" property="gmtUpdate" /> -->
        <result column="create_user_id" property="createUserId" />
        
        <result column="sex" property="sex"/>
        <result column="phone" property="phone"/>
        <result column="email" property="email"/>
        <result column="name" property="name"/>
        
        <result column="password" property="password"/>
        <result column="salt" property="salt"/>
        <result column="last_ip" property="lastIp" />
        <result column="last_time" property="lastTime" />
        
        <result column="enterpriseName" property="enterpriseName"/>
        <result column="departmentName" property="departmentName"/>
        <result column="jobName" property="jobName"/>

        <collection property="roles" ofType="com.kivi.framework.vo.RoleVo">
            <id column="roleId" property="id"/>
            <result column="roleName" property="name"/>
            <result column="roleDescription" property="description"/>
            <result column="roleSeq" property="seq"/>
            <result column="roleStatus" property="status"/>
        </collection>
    </resultMap>
    
    <!-- 分页查询 -->
    <!-- 多表页面信息查询 -->
    <select id="selectSysUserPage" parameterType="map" resultType="map">
        SELECT DISTINCT
	        t.id,
	        t.login_name AS loginName,
	        t.login_mode,
	        t.user_type AS userType,
	        t.application_id,
	        t.`status`,
	        t.expired,
	        t.enterprise_id AS enterpriseId,
	        t.department_id AS departmentId,
	        t.job_id AS jobId,
	        t.is_leader AS isLeader,
	        t.gmt_create AS gmtCreate,
			<!-- t.gmt_update AS gmtUpdate, -->
	        t3.id AS roleId,
	        t3.`name` AS roleName,
	        t3.description AS roleDescription,
	        t3.seq AS roleSeq,
	        t3.`status` AS roleStatus,
	        t4.enterprise_name AS enterpriseName,
	        t5.department_name AS departmentName,
	        t6.job_name AS jobName,
	        t7.`name`,
			t7.gender AS sex,
			t7.reg_phone_number AS phone,
			t7.email,
	        group_concat(t3.`name`) AS rolesList
        FROM
        	ktf_sys_user t
        LEFT JOIN ktf_sys_user_role t2 ON t.id = t2.user_id
        LEFT JOIN ktf_sys_role t3 ON t2.role_id = t3.id
        LEFT JOIN ktf_enterprise t4 ON t.enterprise_id = t4.id
        LEFT JOIN ktf_enterprise_department t5 ON t.department_id = t5.id
        LEFT JOIN ktf_enterprise_job t6 ON t.job_id = t6.id
        LEFT JOIN cif_customer t7 ON t.cif_id = t7.id
        <where>
            <if test="params.name != null and params.name != '' ">
                (t.login_name like concat('%',#{params.name},'%')
                or t7.name like concat('%',#{params.name},'%'))
            </if>
            <if test="params.userType !=null">
            	AND t.user_type in 
				 <foreach item="item" index="index" collection="params.userType" open="(" separator="," close=")">
		                 #{item}
		         </foreach>
            </if>
            <if test=" params.enterpriseId != null and params.enterpriseId !=''">
                and t.enterprise_id = #{params.enterpriseId}
            </if>
            <if test="params.departmentId != null and params.departmentId !=''">
                and t.department_id= #{params.departmentId}
            </if>
            <if test=" params.startTime != null and params.starTime !='' and params.endTime !=null and params.endTime!=''">
                and (t.gmt_create between concat(#{params.startTime},'00:00:00') and
                concat(#{params.endTime},"00:00:00"))
            </if>
        </where>
        GROUP BY t.id
        ORDER BY t7.`name`
    </select>
    
    
    <select id="selectByUserId" resultMap="UserVoResultMap" parameterType="java.lang.Long">
        SELECT DISTINCT
			t.id,
			t.cif_id,
			t.login_name,
			t.login_mode,
			t.user_type,
			t.application_id,
			t.`status`,
			t.expired,
			t.enterprise_id,
			t.department_id,
			t.job_id,
			t.is_leader,
			t.gmt_create,
			<!-- t.gmt_update, -->
			t3.id AS roleId,
			t3.`name` AS roleName,
			t3.description AS roleDescription,
			t3.seq AS roleSeq,
			t3.`status` AS roleStatus,
			t5.enterprise_name AS enterpriseName,
			t6.department_name AS departmentName,
			t7.job_name AS jobName,
			t8.`name`,
			t8.gender AS sex,
			t8.reg_phone_number AS phone,
			t8.email,
			t9.credential AS `password`,
			t9.credential_salt AS salt,
			t9.last_ip,
			t9.last_time
		FROM
			ktf_sys_user t
		LEFT JOIN ktf_sys_user_role t2 ON t.id = t2.user_id
		LEFT JOIN ktf_sys_role t3 ON t2.role_id = t3.id
		LEFT JOIN ktf_sys_user_token t4 ON t.id = t4.user_id
		LEFT JOIN ktf_enterprise t5 ON t.enterprise_id = t5.id
		LEFT JOIN ktf_enterprise_department t6 ON t.department_id = t6.id
		LEFT JOIN ktf_enterprise_job t7 ON t.job_id = t7.id
		LEFT JOIN cif_customer t8 ON t.cif_id = t8.id
		LEFT JOIN cif_customer_auths t9 ON t.id = t9.id
        <where>
            t.id=#{userId}
        </where>
    </select>

    <select id="selectByLoginName" resultMap="UserVoResultMap" parameterType="java.lang.String">
        SELECT DISTINCT
			t.id,
			t.cif_id,
			t.login_name,
			t.login_mode,
			t.user_type,
			t.application_id,
			t.`status`,
			t.expired,
			t.enterprise_id,
			t.department_id,
			t.job_id,
			t.is_leader,
			t.gmt_create,
			<!-- t.gmt_update, -->
			t3.id AS roleId,
			t3.`name` AS roleName,
			t3.description AS roleDescription,
			t3.seq AS roleSeq,
			t3.`status` AS roleStatus,
			t5.enterprise_name AS enterpriseName,
			t6.department_name AS departmentName,
			t7.job_name AS jobName,
			t8.`name`,
			t8.gender AS sex,
			t8.reg_phone_number AS phone,
			t8.email,
			t9.credential AS `password`,
			t9.credential_salt AS salt,
			t9.last_ip,
			t9.last_time
		FROM
			ktf_sys_user t
		LEFT JOIN ktf_sys_user_role t2 ON t.id = t2.user_id
		LEFT JOIN ktf_sys_role t3 ON t2.role_id = t3.id
		LEFT JOIN ktf_sys_user_token t4 ON t.id = t4.user_id
		LEFT JOIN ktf_enterprise t5 ON t.enterprise_id = t5.id
		LEFT JOIN ktf_enterprise_department t6 ON t.department_id = t6.id
		LEFT JOIN ktf_enterprise_job t7 ON t.job_id = t7.id
		LEFT JOIN cif_customer t8 ON t.cif_id = t8.id
		LEFT JOIN cif_customer_auths t9 ON t.id = t9.id
        <where>
            t.login_name=#{loginName}
        </where>
    </select>
    
	
	<!-- 查询用户的所有权限 -->
    <select id="selectPerms" resultType="string">
		SELECT
        	m.url
        FROM
            ktf_sys_user_role ur
        LEFT JOIN ktf_sys_role_resource rm ON ur.role_id = rm.role_id
        LEFT JOIN ktf_sys_resource m ON rm.resource_id = m.id
        WHERE
        	ur.user_id = #{userId}
	</select>
	
	<select id="selectUserTree" resultType="Map">
		SELECT 
			t.id, 
			t2.`name`
		FROM
			ktf_sys_user t
		LEFT JOIN cif_customer t2 ON t.cif_id = t2.id 
	</select>

</mapper>

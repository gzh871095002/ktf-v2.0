package com.kivi.dashboard.shiro;

import org.apache.dubbo.config.annotation.Reference;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import com.kivi.dashboard.shiro.service.ShiroUserService;
import com.kivi.dashboard.shiro.service.impl.ShiroUserServiceImpl;
import com.kivi.dashboard.sys.service.ISysRoleService;
import com.kivi.dashboard.sys.service.ISysUserEnterpriseService;
import com.kivi.dashboard.sys.service.ISysUserService;
import com.kivi.dashboard.sys.service.ISysUserTokenService;
import com.kivi.framework.properties.KtfDashboardProperties;

/**
 * @Description Apache Shiro配置类
 */

@Configuration
public class ShiroUserConfig {

	@Autowired(required = false)
	private ISysUserService				userService;
	@Autowired(required = false)
	private ISysRoleService				roleService;
	@Autowired(required = false)
	private ISysUserEnterpriseService	userEnterpriseService;
	@Autowired(required = false)
	private ISysUserTokenService		userTokenService;

	@Reference(check = false)
	private ISysUserService				dubboUserService;
	@Reference(check = false)
	private ISysRoleService				dubboRoleService;
	@Reference(check = false)
	private ISysUserEnterpriseService	dubboUserEnterpriseService;
	@Reference(check = false)
	private ISysUserTokenService		dubboUserTokenService;

	@ConditionalOnProperty(
			prefix = KtfDashboardProperties.PREFIX,
			value = "enable-dubbo",
			havingValue = "false",
			matchIfMissing = true)
	@Bean("shiroUserService")
	public ShiroUserService shiroUserService() {

		return new ShiroUserServiceImpl(userService, roleService, userEnterpriseService, userTokenService);
	}

	@ConditionalOnProperty(
			prefix = KtfDashboardProperties.PREFIX,
			value = "enable-dubbo",
			havingValue = "true",
			matchIfMissing = false)
	@Bean("shiroUserServiceDubbo")
	public ShiroUserService shiroUserServiceDubbo() {

		return new ShiroUserServiceImpl(dubboUserService, dubboRoleService, dubboUserEnterpriseService,
				dubboUserTokenService);
	}

}

package com.kivi.db.datasource;


import org.apache.commons.lang3.StringUtils;

import com.kivi.framework.constant.KtfConstant;
import com.kivi.framework.crypto.sm4.SM4;
import com.kivi.framework.crypto.sm4.SM4Ctx;
import com.kivi.framework.exception.KtfException;
import com.kivi.framework.util.kit.ByteStringKit;
import com.zaxxer.hikari.HikariDataSource;

import lombok.extern.slf4j.Slf4j;

@Slf4j
public class KtfHikariDataSource extends HikariDataSource {
	
	private String passwordDis;
	
	private final static byte[] PKEY = {0x11, 0x22,0x33,0x44,0x55,0x66,0x77,0x78,0x11, 0x22,0x33,0x44,0x55,0x66,0x77,0x78};

	@Override
	public String getPassword() {
		if(StringUtils.isNotBlank(passwordDis))
			return passwordDis;
			
		String encPassword = super.getPassword();
		if(null == encPassword)
			return null;
		log.info("数据库密码密文：{}", encPassword);
		
		SM4Ctx ctx = new SM4Ctx();
		SM4 sm4 = new SM4();
		try {
			sm4.sm4_setkey_dec(ctx, PKEY);
			byte[] encKey = ByteStringKit.toBytes(encPassword, ByteStringKit.HEX);
			byte[] data = sm4.sm4_crypt_ecb(ctx, encKey);
			passwordDis =   new String(data, KtfConstant.DEFAULT_CHARSET);
			log.trace("数据库密码：{}", passwordDis);
			return passwordDis;
		} catch (Exception e) {
			log.error("数据库密码解密失败",e);
			throw new KtfException("数据库密码解密失败",e);
		}
	}
	
	public static void main(String[] args) {
		// 明文
		String cotent = "root";
		
		SM4Ctx ctx = new SM4Ctx();
		SM4 sm4 = new SM4();
		
		try {
			sm4.sm4_setkey_enc(ctx, PKEY);
			byte[] encKey = sm4.sm4_crypt_ecb(ctx, cotent.getBytes(KtfConstant.DEFAULT_CHARSET)) ;
			
			String hexKey = ByteStringKit.toHex(encKey);
			
			System.out.println(hexKey);
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}
